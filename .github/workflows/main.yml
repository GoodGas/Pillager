name: Build Pillager

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0
    
    - name: Checkout private donut
      uses: actions/checkout@v3
      with:
        repository: qwqdanchun/donut-self
        token: ${{ secrets.PERSONAL_TOKEN }}
        path: donut

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install NuGet Packages
      run: nuget restore Pillager.sln
      
    - name: Build solution
      run: msbuild -nologo -v:m -p:Configuration=${{ matrix.configuration }} Pillager.sln
      
    - name: Build Shellcode
      shell: powershell
      run: .\donut\donut.exe -z 3 -i .\Pillager\bin\Release\Pillager.exe -o .\Pillager.bin
      
    - name: Delete-tag-and-release
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: AutoBuild
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: AutoBuild
        release_name: AutoBuild
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        
    - name: Upload Release Exe
      id: upload-release-exe 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Pillager/bin/Release/Pillager.exe
        asset_name: Pillager.exe
        asset_content_type: application/exe
        
    - name: Upload Release Bin
      id: upload-release-bin 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Pillager.bin
        asset_name: Pillager.bin
        asset_content_type: application/octet-stream

    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose

    - name: Copy Pillager.bin
      run: copy .\Pillager.bin .\cs-plugin\module\Pillager.bin

    - name: Pack Plugin Folder
      shell: powershell
      run: Compress-7Zip "cs-plugin" -ArchiveFileName "cs-plugin.zip" -Format Zip

    - name: Upload Plugin Zip
      id: upload-plugin-zip 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cs-plugin.zip
        asset_name: cs-plugin.zip
        asset_content_type: application/octet-stream
