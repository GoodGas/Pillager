name: Build Pillager

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout private donut
      uses: actions/checkout@v3
      with:
        repository: qwqdanchun/donut-self
        token: ${{ secrets.PERSONAL_TOKEN }}
        path: donut

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install NuGet Packages
      run: nuget restore Pillager.sln
      
    - name: Build solution
      run: msbuild -nologo -v:m -p:Configuration=${{ matrix.configuration }} Pillager.sln
      
    - name: Build Shellcode
      shell: powershell
      run: .\donut\donut.exe -z 3 -i .\Pillager\bin\Release\Pillager.exe -o .\Pillager.bin
      
    # 移除与 Releases 相关的步骤
    # - name: Delete-tag-and-release
    #   uses: dev-drprasad/delete-tag-and-release@v0.2.1
    #   with:
    #     delete_release: true
    #     tag_name: AutoBuild
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@latest
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: AutoBuild
    #     release_name: AutoBuild
    #     body: ${{ steps.changelog.outputs.changelog }}
    #     draft: false
    #     prerelease: false
        
    # - name: Upload Release Exe
    #   id: upload-release-exe 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./Pillager/bin/Release/Pillager.exe
    #     asset_name: Pillager.exe
    #     asset_content_type: application/exe
        
    # - name: Upload Release Bin
    #   id: upload-release-bin 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./Pillager.bin
    #     asset_name: Pillager.bin
    #     asset_content_type: application/octet-stream

    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose

    - name: Copy Pillager.bin
      run: copy .\Pillager.bin .\cs-plugin\module\Pillager.bin

    - name: Pack Plugin Folder
      shell: powershell
      run: Compress-7Zip "cs-plugin" -ArchiveFileName "cs-plugin.zip" -Format Zip

    # 使用 actions/upload-artifact 上传构建产物
    - name: Upload Pillager.exe
      uses: actions/upload-artifact@v3
      with:
        name: Pillager.exe
        path: ./Pillager/bin/Release/Pillager.exe

    - name: Upload Pillager.bin
      uses: actions/upload-artifact@v3
      with:
        name: Pillager.bin
        path: ./Pillager.bin

    - name: Upload cs-plugin.zip
      uses: actions/upload-artifact@v3
      with:
        name: cs-plugin.zip
        path: ./cs-plugin.zip
